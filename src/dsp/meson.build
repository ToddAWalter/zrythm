# SPDX-FileCopyrightText: Â© 2019-2021 Alexandros Theodotou <alex@zrythm.org>
# SPDX-License-Identifier: LicenseRef-ZrythmLicense

audio_srcs = files([
  'audio_function.cpp',
  'audio_region.cpp',
  'audio_track.cpp',
  'automation_function.cpp',
  'automation_point.cpp',
  'automation_region.cpp',
  'automation_track.cpp',
  'automation_tracklist.cpp',
  'audio_bus_track.cpp',
  'audio_group_track.cpp',
  'balance_control.cpp',
  'channel.cpp',
  'channel_send.cpp',
  'channel_track.cpp',
  'chord_descriptor.cpp',
  'chord_object.cpp',
  'chord_region.cpp',
  'chord_track.cpp',
  'clip.cpp',
  'control_port.cpp',
  'control_room.cpp',
  'ditherer.cpp',
  'engine.cpp',
  'engine_alsa.cpp',
  'engine_dummy.cpp',
  'engine_jack.cpp',
  'engine_pa.cpp',
  'engine_pulse.cpp',
  'engine_rtaudio.cpp',
  'engine_rtmidi.cpp',
  'engine_sdl.cpp',
  'engine_windows_mme.cpp',
  'exporter.cpp',
  'ext_port.cpp',
  'fade.cpp',
  'fader.cpp',
  'foldable_track.cpp',
  'graph.cpp',
  'graph_node.cpp',
  'graph_thread.cpp',
  'graph_export.cpp',
  'group_target_track.cpp',
  'hardware_processor.cpp',
  'instrument_track.cpp',
  'marker.cpp',
  'marker_track.cpp',
  'master_track.cpp',
  'meter.cpp',
  'metronome.cpp',
  'midi_bus_track.cpp',
  'midi_event.cpp',
  'midi_function.cpp',
  'midi_group_track.cpp',
  'midi_mapping.cpp',
  'midi_note.cpp',
  'midi_region.cpp',
  'midi_track.cpp',
  'modulator_macro_processor.cpp',
  'modulator_track.cpp',
  'peak_fall_smooth.cpp',
  'pool.cpp',
  'port.cpp',
  'port_connection.cpp',
  'port_connections_manager.cpp',
  'port_identifier.cpp',
  'position.cpp',
  'quantize_options.cpp',
  'pan.cpp',
  'recording_event.cpp',
  'recording_manager.cpp',
  'region.cpp',
  'region_identifier.cpp',
  'region_link_group.cpp',
  'region_link_group_manager.cpp',
  'router.cpp',
  'rtaudio_device.cpp',
  'rtmidi_device.cpp',
  'sample_processor.cpp',
  'scale.cpp',
  'scale_object.cpp',
  'snap_grid.cpp',
  'stretcher.cpp',
  'supported_file.cpp',
  'tempo_track.cpp',
  'track.cpp',
  'track_lane.cpp',
  'track_processor.cpp',
  'tracklist.cpp',
  'transport.cpp',
  'true_peak_dsp.cpp',
  'velocity.cpp',
  'windows_mmcss.cpp',
  'windows_mme_device.cpp',
  ])

subdir ('vamp-ports')

# optimized audio
optimized_audio_lib = static_library (
  'zrythm-optimized-audio-lib',
  sources: [
    'curve.cpp',
    'kmeter_dsp.cpp',
    'peak_dsp.cpp',
    ],
  dependencies: zrythm_deps,
  include_directories: all_inc,
  c_args: [
    common_cflags, strict_cflags, '-O3',
    extra_optimizations_cflags,
    extra_extra_optimizations_cflags,
    ],
  )

zrythm_srcs += audio_srcs
