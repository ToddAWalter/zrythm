/*
 * SPDX-FileCopyrightText: © 2019-2020 Alexandros Theodotou <alex@zrythm.org>
 *
 * SPDX-License-Identifier: LicenseRef-ZrythmLicense
 */

/**
 * @file
 *
 * Localization utils.
 *
 */

#ifndef __UTILS_LOCALIZATION_H__
#define __UTILS_LOCALIZATION_H__

#include "gui/backend/gtk_widgets/gtk_wrapper.h"

/**
 * @addtogroup utils
 *
 * @{
 */

// clang-format off
typedef enum LocalizationLanguage
{
  /* note: this part will be auto-generated by cmake */
  @LL_LANGS@
  NUM_LL_LANGUAGES,
} LocalizationLanguage;
// clang-format on

/**
 * Returns the localized language name (e.g.
 * "Ελληνικά").
 */
const char *
localization_get_localized_name (LocalizationLanguage lang);

/**
 * Returns the character string code for the
 * language (e.g. "fr").
 */
const char *
localization_get_string_code (LocalizationLanguage lang);

/**
 * Returns the localized language name with the
 * code (e.g. "Ελληνικά [el]").
 */
const char *
localization_get_string_w_code (LocalizationLanguage lang);

const char **
localization_get_language_codes (void);

const char **
localization_get_language_strings (void);

const char **
localization_get_language_strings_w_codes (void);

/**
 * Returns the first locale found matching the given language, or empty if a
 * locale for the given language does not exist.
 */
std::string
localization_locale_exists (LocalizationLanguage lang);

/**
 * Sets the locale to the currently selected one and
 * inits gettext.
 *
 * @param use_locale Use the user's local instead of
 *   the Zrythm settings.
 *
 * Returns if a locale for the selected language
 * exists on the system or not.
 */
bool
localization_init (
  bool use_locale,
  bool print_debug_messages,
  bool queue_error_if_not_installed);

/**
 * @}
 */

#endif
