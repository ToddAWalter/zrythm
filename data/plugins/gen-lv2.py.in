#!/usr/bin/env python3
# This script generates the given LV2 plugin using Faust.

import os
import sys
import shutil
import subprocess

def main():
    faust2lv2 = sys.argv[1]
    dsp_file = sys.argv[2]
    dsp_filename = os.path.basename(dsp_file)
    pl_underscored_name = os.path.splitext(dsp_filename)[0]
    pl_uri = "@URI_PREFIX@" + pl_underscored_name
    prv_dir = os.path.abspath(sys.argv[3])
    out_filename = sys.argv[4]
    pl_type = sys.argv[5]
    utils_lib = sys.argv[6]
    utils_lib_filename = os.path.basename(utils_lib)
    generated_src_output = sys.argv[7]

    os.makedirs(prv_dir, exist_ok=True)
    
    shutil.copy(dsp_file, os.path.join(prv_dir, dsp_filename))
    shutil.copy(utils_lib, os.path.join(prv_dir, utils_lib_filename))

    os.chdir(prv_dir)

    faust_args = ["-keep", "-vec"]
    if pl_type == "InstrumentPlugin":
        faust_args.extend(["-novoicectrls", "-nvoices", "16"])

    subprocess.run([faust2lv2, "-uri-prefix", "@URI_PREFIX@"] + faust_args + [dsp_filename], check=True)

    if pl_type == "InstrumentPlugin":
        print("done")
    else:
        ttl_file = f"{pl_underscored_name}.lv2/{pl_underscored_name}.ttl"
        with open(ttl_file, 'r') as f:
            content = f.read()
        content = content.replace("a lv2:Plugin", f"a lv2:{pl_type}, lv2:Plugin")
        with open(ttl_file, 'w') as f:
            f.write(content)

    os.chdir('..')

    dest_lv2_dir = os.path.join(generated_src_output, f"{pl_underscored_name}.lv2")
    os.makedirs(dest_lv2_dir, exist_ok=True)
    for file in os.listdir(f"{prv_dir}/{pl_underscored_name}.lv2"):
        if file.endswith('.ttl'):
            shutil.copy(f"{prv_dir}/{pl_underscored_name}.lv2/{file}", dest_lv2_dir)

    for file in [f"{pl_underscored_name}.ttl", "manifest.ttl"]:
        file_path = os.path.join(dest_lv2_dir, file)
        with open(file_path, 'r') as f:
            content = f.read()
        content = content.replace(f"<{pl_underscored_name}.so>", f"<{pl_underscored_name}@LIB_SUFFIX@>")
        with open(file_path, 'w') as f:
            f.write(content)

    shutil.copy(f"{prv_dir}/{pl_underscored_name}/{pl_underscored_name}.cpp", dest_lv2_dir)
    cpp_file = os.path.join(dest_lv2_dir, f"{pl_underscored_name}.cpp")
    with open(cpp_file, 'r') as f:
        content = f.read()
    content = content.replace('"https://faustlv2.bitbucket.io"', '"@URI_PREFIX@"')
    with open(cpp_file, 'w') as f:
        f.write(content)

    shutil.rmtree(out_filename, ignore_errors=True)
    shutil.move(f"{prv_dir}/{pl_underscored_name}.lv2", out_filename)

    os.remove(os.path.join(prv_dir, dsp_filename))
    os.remove(os.path.join(prv_dir, utils_lib_filename))
    shutil.rmtree(os.path.join(prv_dir, pl_underscored_name), ignore_errors=True)
    for item in os.listdir(prv_dir):
        if item.endswith('.lv2'):
            shutil.rmtree(os.path.join(prv_dir, item))
    os.rmdir(prv_dir)

if __name__ == "__main__":
    main()
