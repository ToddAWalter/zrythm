# SPDX-FileCopyrightText: Â© 2024 Alexandros Theodotou <alex@zrythm.org>
# SPDX-License-Identifier: LicenseRef-ZrythmLicense

workflow:
  rules:
    # run merge request pipelines
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    # do not run branch pipelines if corresponding merge requests exist...
    # (this avoids duplicate pipelines)
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    # ...but otherwise run branch pipelines
    - if: $CI_COMMIT_BRANCH
    # run tag pipelines
    - if: $CI_COMMIT_TAG

stages:
  - setup
  - check
  - build
  - test
  - deploy

default:
  cache:
    # this number must be bumped every time these subprojects are updated
    - key: configured-cache-5
      paths:
        - venv
        - subprojects/gtk4
        - subprojects/libadwaita
        - subprojects/libpanel
        - subprojects/yyjson
        - subprojects/libcyaml
    - key: $CI_COMMIT_TIMESTAMP
      paths:
        - build
  tags:
    - archlinux
  before_script:
    - source ./venv/bin/activate

configure:
  stage: setup
  before_script:
    - python3 -m venv venv
    - source ./venv/bin/activate
    - python3 -m pip install -r requirements.txt
  script:
    - CC=gcc meson setup build -Dstrict_flags=true -Dforce_fallback_for=gtk4,libadwaita,libpanel,yyjson,libcyaml -Dtests=true -Db_sanitize=address

clang-format-check:
  stage: check
  script:
    - ninja -C build clang-format-check

reuse-check:
  stage: check
  script:
    - reuse lint

build:
  stage: build
  script:
    - ninja -C build

test:
  stage: test
  script:
    - ninja -C build test || (cat build/meson-logs/testlog.txt && exit 1)

update_manual:
  stage: deploy
  only:
    - master
    - tags
  script:
    - ninja -C build manual_bundle &> manual_bundle_results.txt || (cat manual_bundle_results.txt && exit 1)
    - rsync -av --no-group --exclude '*.zip' build/doc/user/_rendered/* $REMOTE_USER@www.zrythm.org:$REMOTE_USER_MANUAL_UPLOAD_PATH
  before_script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - source ./venv/bin/activate
